plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.moowork.node' version '1.3.1'
}

apply plugin: 'java'

group = 'com'
version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '11'
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

jar {
    duplicatesStrategy "exclude"
    manifest {
        attributes(
                'Main-Class': 'ru.horn.todoshka.TodoshkaApplication'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task stage(type: Copy, dependsOn: [clean, build]) {
    doFirst {
        from jar
        into project.rootDir
        rename {
            'uber.jar'
        }
    }
}

//tasks.withType(Jar) {
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//
//    manifest {
//        attributes["Main-Class"] = "ru.horn.todoshka.TodoshkaApplication"
//    }
//}

stage.mustRunAfter(clean)

clean {
    doLast {
        project.file('uber.jar').delete()
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

node {
    download = true
}

dependencies {
//    implementation group: 'org.hibernate.orm', name: 'hibernate-core', version: '6.2.5.Final'
//    implementation group: 'org.hibernate', name: 'hibernate-entitymanager', version: '6.0.0.Alpha7', ext: 'pom'
    implementation(platform("org.springframework.boot:spring-boot-dependencies:2.7.4")) //:2.7.4

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    implementation group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.2.Final'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation group: 'com.github.azbh111', name: 'SpringBootPlugin', version: '0.4.0.33'

//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'


    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
//    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'

    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'com.tngtech.archunit:archunit:1.0.1'
}

tasks.named('test') {
    useJUnitPlatform()
}